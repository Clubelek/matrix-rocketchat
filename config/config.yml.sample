# Token that the homeserver uses to talk to the application service.
# This has to match the parameter `hs_token` in your  rocketchat_registration.yaml.
# Choose a long random string.
hs_token: "hs_secret_token"
# Token that the application service uses to talk to the homeserver
# This has to match the parameter `as_token` in your  rocketchat_registration.yaml.
# Choose a long random string.
as_token: "as_secret_token"
# The address to which the application service binds. If you run the
# application service without a reverse proxy, this has to be a public IP
# address of your server. You can choose any IP/port that is available on your
# server. 0.0.0.0 binds to all interfaces.
as_address: "0.0.0.0:8088"
# The URL which can be used to access the application service. If you type this
# URL in your browser after you started the application service you should see
# "Your Rocket.Chat <-> Matrix application service is running".
# It can be a domain that points to the public IP address of your server or the
# IP address itself.
# This has to match the parameter `url` in your  rocketchat_registration.yaml.
as_url: "https://example.com:8088"
# The URL which can be used to access your homeserver. If the homeserver is
# running on the same machine you can use the non SSL port 8008. If the
# homeserver is running on another machine, use the servername with the SSL
# port (e.g. https://example.org:8448).
hs_url: "http://127.0.0.1:8008"
# The domain of the homeserver. It is used to create the usernames (the part
# after the colon).
# This has to match the parameter `server_name` in your homeserver.yaml
# (if you are running synapse as your homeserver).
hs_domain: "example.org"
# The local part of your bot, the full name will be something like
# @rocketchat:example.com This will also be the namespace that the application
# service uses on the homeserver so no other application service/user will be
# able to use username that starts with this string.
# This has to match the parameter `sender_localpart` in your rocketchat_registration.yaml.
sender_localpart: "rocketchat"
# The URL to the SQL-Lite database that the application service will use. You
# can choose any file path that the user you run the application service has
# access to. The path can be absolute or relative.
database_url: "./database.sqlite3"
# Flag that indicates if the application service should output the log to the console
log_to_console: true
# Flag that indicates if the application service should log to a file
log_to_file: true
# Path to the log file (this is only mandatory if logging to a file is enabled)
log_file_path: "/path/to/file.log"
# Flag to indicate if the bot user accepts invites from rooms on other homeservers.
# Which means that users from other homeservers can use this Rocket.Chat bridge
# if the flag is set to true.
accept_remote_invites: false
# Flag that indicates if the application service should use SSL. It's highly
# recommended that you use SSL if you expose the application service directly
# (bind it to a public IP address). If you run the application service behind
# a reverse-proxy you can run it on localhost and let the proxy handle SSL.
use_ssl: true
# Path to the SSL certificate (this is only mandatory if you run the
# application service with SSL).
ssl_certificate_path: "/etc/letsencrypt/live/example.com/fullchain.pem"
# Path to the SSL key (this is only mandatory if you run the application
# service with SSL).
ssl_key_path: "/etc/letsencrypt/live/example.com/privkey.pem"
